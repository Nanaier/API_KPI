openapi: '3.0.2'
info:
  title: Online Auction API
  version: '1.0'
servers:
  - url: https://api.server.online-auction/v1

tags:
  - name: lot
    description: Operations about lot
  - name: user
    description: Operations about user

paths:
   /auctioneer/{auctioneerId}/lots:
    get:
      tags:
        - lot
      summary: Returns all the lots that a specific auctioneer has created.
      description: Returns all the lots that the auctioneer has created.
      operationId: getAuctioneerLots
      parameters:
        - name: auctioneerId
          in: path
          description: id of auctioneer to get lots from
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns all the lots that the auctioneer has created.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lot'
        '400':
          description: Invalid auctioneerID.
    post: 
        tags:
        - lot
        responses:
          '200':
            description: Returns all the lots that the auctioneer has created.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Lot'
          '400':
            description: Invalid auctioneerID.

# working with specific lot of a specific auctioneer
   /auctioneer/{auctioneerId}/lots/{lotId}:
    put:
      tags:
        - lot
      summary: Updates a specific lot of the specific auctioneer.
      description: Updates a specific lot by Id of the specific auctioneer.
      operationId: updateAuctioneerLot
      parameters:
        - name: auctioneerId
          in: path
          description: id of auctioneer whose lot should be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: lotId
          in: path
          description: id of lot which should be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lot'
      responses:
        '200':
          description: Successfull operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Lot'
        '400':
          description: Invalid ID supplied
        '404':
          description: Lot not found
                
components:
  schemas:
    Lot:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Vase
        price:
          type: number
          format: double
          example: 350.5
        isFavourite:
          type: boolean
          description: is in Favourite List?
          example: 1
        status:
          type: string
          description: Lot Status
          example: sold
          enum:
            - placed
            - active
            - sold
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theAuctioneer
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userType:
          type: string
          description: User Type
          example: auctioneer
          enum:
            - auctioneer
            - bidder
        lots:
          type: array
          items:
            $ref: '#/components/schemas/Lot'
      
      
